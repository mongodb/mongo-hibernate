# Mark a failure as a system/bootstrap failure (purple box) rather then a task
# failure by default.
# Actual testing tasks are marked with `type: test`
command_type: system

# Protect ourselves against rogue test case, or curl gone wild, that runs forever
exec_timeout_secs: 3600

# When a task that used to pass starts to fail, go through all versions that may have been skipped
# to detect when the task started failing
stepback: true

functions:
  fetch-source:
    # Executes git clone and applies the submitted patch, if any.
    - command: git.get_project
      params:
        directory: src

  create-expansions:
    - command: subprocess.exec
      params:
        working_dir: src
        binary: bash
        include_expansions_in_env:
          - is_patch
          - version_id
          - project
        args:
          - .evergreen/create-expansions.sh
    - command: expansions.update
      params:
        file: src/expansion.yml

  prepare-resources:
    - command: subprocess.exec
      params:
        working_dir: src
        binary: bash
        include_expansions_in_env:
          - DRIVERS_TOOLS
        args:
          - .evergreen/fetch-drivers-tools.sh

  bootstrap-mongo-orchestration:
    - command: subprocess.exec
      params:
        binary: bash
        include_expansions_in_env:
          - TOPOLOGY
          - MONGODB_VERSION
          - MONGODB_BINARIES
        args:
          - ${DRIVERS_TOOLS}/.evergreen/run-orchestration.sh
    # run-orchestration generates expansion file with the MONGODB_URI for the cluster
    - command: expansions.update
      params:
        file: mo-expansion.yml

  stop-mongo-orchestration:
    - command: subprocess.exec
      params:
        binary: bash
        args:
          - ${DRIVERS_TOOLS}/.evergreen/stop-orchestration.sh

  upload-test-results:
    - command: attach.xunit_results
      params:
        files:
          - src/build/test-results/test/TEST-*.xml
          - src/build/test-results/integrationTest/TEST-*.xml

  cleanup:
    - command: subprocess.exec
      params:
        command: rm -rf ${DRIVERS_TOOLS}

# Functions to run before all tasks (except those in task groups).
pre:
  - func: fetch-source
  - func: create-expansions
  - func: prepare-resources

# Functions to run after all tasks (except those in task groups).
post:
  - func: stop-mongo-orchestration
  - func: upload-test-results
  - func: cleanup

#######################################
#                Tasks                #
#######################################
tasks:
  - name: static-analysis
    type: test
    tags:
      - pr
    commands:
      - command: subprocess.exec
        params:
          working_dir: src
          binary: bash
          add_to_path:
            - .evergreen
          args:
            - static-checks.sh

  - name: run-unit-tests
    type: test
    tags:
      - pr
    commands:
      - command: subprocess.exec
        params:
          working_dir: src
          binary: bash
          add_to_path:
            - .evergreen
          args:
            - run-unit-tests.sh

  - name: run-integration-tests
    type: test
    tags:
      - pr
    commands:
      - func: bootstrap-mongo-orchestration
      - command: subprocess.exec
        params:
          working_dir: src
          binary: bash
          add_to_path:
            - .evergreen
          args:
            - run-integration-tests.sh

########################################
#              Axes                    #
########################################
axes:
  - id: mongo-version
    display_name: "MongoDB Version"
    values:
      - id: "8.0"
        display_name: "8.0"
        variables:
          MONGODB_VERSION: "8.0"
      - id: "7.0"
        display_name: "7.0"
        variables:
          MONGODB_VERSION: "7.0"
      - id: "6.0"
        display_name: "6.0"
        variables:
          MONGODB_VERSION: "6.0"

  - id: topology
    display_name: Topology
    values:
      - id: replicaset
        display_name: "Replica Set"
        variables:
          TOPOLOGY: replica_set

  - id: os
    display_name: OS
    values:
      - id: linux
        display_name: Linux
        run_on: rhel80-small

########################################
#           Build Variants             #
########################################
buildvariants:

  - name: static-checks
    tags:
      - pr
    display_name: "Static Checks"
    run_on: rhel80-small
    tasks:
      - name: static-analysis

  - name: unit-tests
    tags:
      - pr
    display_name: "Unit Tests"
    run_on: rhel80-medium
    tasks:
      - name: run-unit-tests

  - matrix_name: mongo-hibernate
    matrix_spec: { mongo-version: "*", topology: "*", os: "*" }

    display_name: "${mongo-version} ${topology} ${os}"
    tags:
      - pr
    tasks:
      - name: run-integration-tests
